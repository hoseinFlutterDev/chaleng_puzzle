// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'dart:ui' as ui;

import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';
import 'package:path_drawing/path_drawing.dart';

class PuzzlePieceClipPathPainter extends CustomPainter {
  final ui.Image image;
  final Rect rect;
  final String? rawSvgPath; // رشتهٔ d="…" واقعی

  PuzzlePieceClipPathPainter({
    required this.image,
    required this.rect,
    this.rawSvgPath,
  });

  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint();
    final List<String> svgPaths = [
      '''M109 40.7513C109 43.0112 111.472 44.5175 113.706 44.1745C114.454 44.0596 115.22 44 116 44C124.284 44 131 50.7157 131 59C131 67.2843 124.284 74 116 74C115.22 74 114.453 73.9403 113.705 73.8253C111.472 73.482 109 74.988 109 77.2479V106C109 107.657 107.657 109 106 109L77.2479 109C74.988 109 73.482 111.472 73.8253 113.705C73.9403 114.453 74 115.22 74 116C74 124.284 67.2843 131 59 131C50.7157 131 44 124.284 44 116C44 115.22 44.0597 114.453 44.1747 113.705C44.518 111.472 43.012 109 40.7521 109H12C10.3431 109 9 107.657 9 106L9 12C9 10.3431 10.3431 9 12 9L106 9C107.657 9 109 10.3431 109 12V40.7513Z
''',
      '''M109 40.7513C109 43.0112 106.528 44.5175 104.294 44.1745C103.546 44.0596 102.78 44 102 44C93.7157 44 87 50.7157 87 59C87 67.2843 93.7157 74 102 74C102.78 74 103.547 73.9403 104.295 73.8253C106.528 73.482 109 74.988 109 77.2479V106C109 107.657 107.657 109 106 109L77.2479 109C74.988 109 73.482 111.472 73.8253 113.705C73.9403 114.453 74 115.22 74 116C74 124.284 67.2843 131 59 131C50.7157 131 44 124.284 44 116C44 115.22 44.0597 114.453 44.1747 113.705C44.518 111.472 43.012 109 40.7521 109H12C10.3431 109 9 107.657 9 106L9 77.2479C9 74.988 11.4717 73.482 13.7054 73.8253C14.4535 73.9403 15.2198 74 16 74C24.2843 74 31 67.2843 31 59C31 50.7157 24.2843 44 16 44C15.2198 44 14.4535 44.0596 13.7055 44.1745C11.4718 44.5175 9 43.0112 9 40.7513L9 12C9 10.3431 10.3431 9 12 9L106 9C107.657 9 109 10.3431 109 12V40.7513Z''',
      '''M122 40.7513C122 43.0112 119.528 44.5175 117.294 44.1745C116.546 44.0596 115.78 44 115 44C106.716 44 100 50.7157 100 59C100 67.2843 106.716 74 115 74C115.78 74 116.547 73.9403 117.295 73.8253C119.528 73.482 122 74.988 122 77.2479L122 106C122 107.657 120.657 109 119 109L90.2479 109C87.988 109 86.482 106.528 86.8253 104.295C86.9403 103.547 87 102.78 87 102C87 93.7157 80.2843 87 72 87C63.7157 87 57 93.7157 57 102C57 102.78 57.0597 103.547 57.1747 104.295C57.518 106.528 56.012 109 53.7521 109H25C23.3431 109 22 107.657 22 106L22 77.2479C22 74.988 19.5283 73.482 17.2946 73.8253C16.5465 73.9403 15.7802 74 15 74C6.71573 74 5.26656e-07 67.2843 0 59C-5.26656e-07 50.7157 6.71573 44 15 44C15.7802 44 16.5465 44.0596 17.2945 44.1745C19.5282 44.5175 22 43.0112 22 40.7513L22 12C22 10.3431 23.3431 9 25 9L119 9C120.657 9 122 10.3431 122 12V40.7513Z''',
      // '''M122 40.7513C122 43.0112 124.472 44.5175 126.706 44.1745C127.454 44.0596 128.22 44 129 44C137.284 44 144 50.7157 144 59C144 67.2843 137.284 74 129 74C128.22 74 127.453 73.9403 126.705 73.8253C124.472 73.482 122 74.988 122 77.2479V106C122 107.657 120.657 109 119 109H90.2479C87.988 109 86.482 111.472 86.8253 113.705C86.9403 114.453 87 115.22 87 116C87 124.284 80.2843 131 72 131C63.7157 131 57 124.284 57 116C57 115.22 57.0597 114.453 57.1747 113.705C57.518 111.472 56.012 109 53.7521 109H25C23.3431 109 22 107.657 22 106L22 77.2479C22 74.988 19.5283 73.482 17.2946 73.8253C16.5465 73.9403 15.7802 74 15 74C6.71573 74 5.26656e-07 67.2843 0 59C-5.26656e-07 50.7157 6.71573 44 15 44C15.7802 44 16.5465 44.0596 17.2945 44.1745C19.5282 44.5175 22 43.0112 22 40.7513L22 12C22 10.3431 23.3431 9 25 9L119 9C120.657 9 122 10.3431 122 12V40.7513Z''',
      // '''M109.17 106.829C109.17 108.486 107.827 109.829 106.17 109.829H77.4181C75.1582 109.829 73.6522 112.301 73.9955 114.535C74.1105 115.283 74.1702 116.049 74.1702 116.829C74.1702 125.114 67.4544 131.829 59.1702 131.829C50.8859 131.829 44.1702 125.114 44.1702 116.829C44.1702 116.049 44.2298 115.283 44.3448 114.535C44.6882 112.301 43.1822 109.829 40.9222 109.829H12.1702C10.5133 109.829 9.17017 108.486 9.17017 106.829V78.0773C9.17017 75.8173 11.6419 74.3113 13.8756 74.6547C14.6236 74.7697 15.3899 74.8293 16.1702 74.8293C24.4544 74.8293 31.1702 68.1136 31.1702 59.8293C31.1702 51.5451 24.4544 44.8293 16.1702 44.8293C15.39 44.8293 14.6237 44.8889 13.8757 45.0038C11.6419 45.3468 9.17017 43.8405 9.17017 41.5806V12.8293C9.17017 11.1725 10.5133 9.82935 12.1702 9.82935H106.17C107.827 9.82935 109.17 11.1725 109.17 12.8293V106.829Z''',
      // '''M109 40.7513C109 43.0112 111.472 44.5175 113.706 44.1745C114.454 44.0596 115.22 44 116 44C124.284 44 131 50.7157 131 59C131 67.2843 124.284 74 116 74C115.22 74 114.453 73.9403 113.705 73.8253C111.472 73.482 109 74.988 109 77.2479V106C109 107.657 107.657 109 106 109L77.2479 109C74.988 109 73.482 111.472 73.8253 113.705C73.9403 114.453 74 115.22 74 116C74 124.284 67.2843 131 59 131C50.7157 131 44 124.284 44 116C44 115.22 44.0597 114.453 44.1747 113.705C44.518 111.472 43.012 109 40.7521 109H12C10.3431 109 9 107.657 9 106L9 12C9 10.3431 10.3431 9 12 9L40.7521 9C43.012 9 44.518 11.4717 44.1747 13.7054C44.0597 14.4535 44 15.2198 44 16C44 24.2843 50.7157 31 59 31C67.2843 31 74 24.2843 74 16C74 15.2198 73.9403 14.4535 73.8253 13.7054C73.482 11.4717 74.988 9 77.2479 9L106 9C107.657 9 109 10.3431 109 12V40.7513Z''',
    ];
    // انتخاب مسیر:
    final String d =
        rawSvgPath != null
            ? rawSvgPath!
            : (svgPaths..shuffle()).first; // مسیر تصادفی

    final path = parseSvgPathData(d);
    final m = Matrix4.identity()..scale(size.width / 131, size.height / 131);
    final transformed = path.transform(m.storage);

    canvas.save();
    canvas.clipPath(transformed);
    canvas.drawImageRect(
      image,
      rect,
      Rect.fromLTWH(0, 0, size.width, size.height),
      paint,
    );
    canvas.restore();
  }

  @override
  @override
  bool shouldRepaint(covariant PuzzlePieceClipPathPainter oldDelegate) {
    return image != oldDelegate.image ||
        rect != oldDelegate.rect ||
        rawSvgPath != oldDelegate.rawSvgPath;
  }
}

class PuzzlePainter extends CustomPainter {
  final ui.Image image; // تصویر اصلی
  final List<Rect> pieces; // لیست قطعات

  PuzzlePainter({required this.image, required this.pieces});

  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint();
    for (Rect rect in pieces) {
      canvas.drawImageRect(image, rect, rect, paint); // نقاشی هر قطعه
    }
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) => false;
}

// ویجت نمایشی برای هر SVG پازل
// ignore: must_be_immutable
class MyPuzzle extends StatelessWidget {
  String assetName;

  MyPuzzle({super.key, required this.assetName});

  @override
  Widget build(BuildContext context) {
    return SvgPicture.asset(assetName, width: 80, height: 80); // نمایش SVG
  }
}

// 'assets/svg/puzzle-4.svg':
//     '''M122 40.7513C122 43.0112 124.472 44.5175 126.706 44.1745C127.454 44.0596 128.22 44 129 44C137.284 44 144 50.7157 144 59C144 67.2843 137.284 74 129 74C128.22 74 127.453 73.9403 126.705 73.8253C124.472 73.482 122 74.988 122 77.2479V106C122 107.657 120.657 109 119 109H90.2479C87.988 109 86.482 111.472 86.8253 113.705C86.9403 114.453 87 115.22 87 116C87 124.284 80.2843 131 72 131C63.7157 131 57 124.284 57 116C57 115.22 57.0597 114.453 57.1747 113.705C57.518 111.472 56.012 109 53.7521 109H25C23.3431 109 22 107.657 22 106L22 77.2479C22 74.988 19.5283 73.482 17.2946 73.8253C16.5465 73.9403 15.7802 74 15 74C6.71573 74 5.26656e-07 67.2843 0 59C-5.26656e-07 50.7157 6.71573 44 15 44C15.7802 44 16.5465 44.0596 17.2945 44.1745C19.5282 44.5175 22 43.0112 22 40.7513L22 12C22 10.3431 23.3431 9 25 9L119 9C120.657 9 122 10.3431 122 12V40.7513Z''',
// 'assets/svg/puzzle-5.svg':
//     '''M109.17 106.829C109.17 108.486 107.827 109.829 106.17 109.829H77.4181C75.1582 109.829 73.6522 112.301 73.9955 114.535C74.1105 115.283 74.1702 116.049 74.1702 116.829C74.1702 125.114 67.4544 131.829 59.1702 131.829C50.8859 131.829 44.1702 125.114 44.1702 116.829C44.1702 116.049 44.2298 115.283 44.3448 114.535C44.6882 112.301 43.1822 109.829 40.9222 109.829H12.1702C10.5133 109.829 9.17017 108.486 9.17017 106.829V78.0773C9.17017 75.8173 11.6419 74.3113 13.8756 74.6547C14.6236 74.7697 15.3899 74.8293 16.1702 74.8293C24.4544 74.8293 31.1702 68.1136 31.1702 59.8293C31.1702 51.5451 24.4544 44.8293 16.1702 44.8293C15.39 44.8293 14.6237 44.8889 13.8757 45.0038C11.6419 45.3468 9.17017 43.8405 9.17017 41.5806V12.8293C9.17017 11.1725 10.5133 9.82935 12.1702 9.82935H106.17C107.827 9.82935 109.17 11.1725 109.17 12.8293V106.829Z''',
// 'assets/svg/puzzle-6.svg':
//     '''M109 40.7513C109 43.0112 111.472 44.5175 113.706 44.1745C114.454 44.0596 115.22 44 116 44C124.284 44 131 50.7157 131 59C131 67.2843 124.284 74 116 74C115.22 74 114.453 73.9403 113.705 73.8253C111.472 73.482 109 74.988 109 77.2479V106C109 107.657 107.657 109 106 109L77.2479 109C74.988 109 73.482 111.472 73.8253 113.705C73.9403 114.453 74 115.22 74 116C74 124.284 67.2843 131 59 131C50.7157 131 44 124.284 44 116C44 115.22 44.0597 114.453 44.1747 113.705C44.518 111.472 43.012 109 40.7521 109H12C10.3431 109 9 107.657 9 106L9 12C9 10.3431 10.3431 9 12 9L40.7521 9C43.012 9 44.518 11.4717 44.1747 13.7054C44.0597 14.4535 44 15.2198 44 16C44 24.2843 50.7157 31 59 31C67.2843 31 74 24.2843 74 16C74 15.2198 73.9403 14.4535 73.8253 13.7054C73.482 11.4717 74.988 9 77.2479 9L106 9C107.657 9 109 10.3431 109 12V40.7513Z''',
class MyRow extends StatefulWidget {
  final Rect? removedPiece;
  final ui.Image? image;
  final String? selectedSvgPath;
  final void Function(String, int) onTap;

  const MyRow({
    Key? key,
    required this.onTap,
    this.removedPiece,
    this.image,
    this.selectedSvgPath,
  }) : super(key: key);

  // مسیرهای SVG و داده‌های مربوط به هر پازل
  static const rawPaths = {
    'assets/svg/puzzle-1.svg':
        '''M109 40.7513C109 43.0112 111.472 44.5175 113.706 44.1745C114.454 44.0596 115.22 44 116 44C124.284 44 131 50.7157 131 59C131 67.2843 124.284 74 116 74C115.22 74 114.453 73.9403 113.705 73.8253C111.472 73.482 109 74.988 109 77.2479V106C109 107.657 107.657 109 106 109L77.2479 109C74.988 109 73.482 111.472 73.8253 113.705C73.9403 114.453 74 115.22 74 116C74 124.284 67.2843 131 59 131C50.7157 131 44 124.284 44 116C44 115.22 44.0597 114.453 44.1747 113.705C44.518 111.472 43.012 109 40.7521 109H12C10.3431 109 9 107.657 9 106L9 12C9 10.3431 10.3431 9 12 9L106 9C107.657 9 109 10.3431 109 12V40.7513Z
    ''',
    'assets/svg/puzzle-2.svg':
        '''M109 40.7513C109 43.0112 106.528 44.5175 104.294 44.1745C103.546 44.0596 102.78 44 102 44C93.7157 44 87 50.7157 87 59C87 67.2843 93.7157 74 102 74C102.78 74 103.547 73.9403 104.295 73.8253C106.528 73.482 109 74.988 109 77.2479V106C109 107.657 107.657 109 106 109L77.2479 109C74.988 109 73.482 111.472 73.8253 113.705C73.9403 114.453 74 115.22 74 116C74 124.284 67.2843 131 59 131C50.7157 131 44 124.284 44 116C44 115.22 44.0597 114.453 44.1747 113.705C44.518 111.472 43.012 109 40.7521 109H12C10.3431 109 9 107.657 9 106L9 77.2479C9 74.988 11.4717 73.482 13.7054 73.8253C14.4535 73.9403 15.2198 74 16 74C24.2843 74 31 67.2843 31 59C31 50.7157 24.2843 44 16 44C15.2198 44 14.4535 44.0596 13.7055 44.1745C11.4718 44.5175 9 43.0112 9 40.7513L9 12C9 10.3431 10.3431 9 12 9L106 9C107.657 9 109 10.3431 109 12V40.7513Z''',

    'assets/svg/puzzle-3.svg':
        '''M122 40.7513C122 43.0112 119.528 44.5175 117.294 44.1745C116.546 44.0596 115.78 44 115 44C106.716 44 100 50.7157 100 59C100 67.2843 106.716 74 115 74C115.78 74 116.547 73.9403 117.295 73.8253C119.528 73.482 122 74.988 122 77.2479L122 106C122 107.657 120.657 109 119 109L90.2479 109C87.988 109 86.482 106.528 86.8253 104.295C86.9403 103.547 87 102.78 87 102C87 93.7157 80.2843 87 72 87C63.7157 87 57 93.7157 57 102C57 102.78 57.0597 103.547 57.1747 104.295C57.518 106.528 56.012 109 53.7521 109H25C23.3431 109 22 107.657 22 106L22 77.2479C22 74.988 19.5283 73.482 17.2946 73.8253C16.5465 73.9403 15.7802 74 15 74C6.71573 74 5.26656e-07 67.2843 0 59C-5.26656e-07 50.7157 6.71573 44 15 44C15.7802 44 16.5465 44.0596 17.2945 44.1745C19.5282 44.5175 22 43.0112 22 40.7513L22 12C22 10.3431 23.3431 9 25 9L119 9C120.657 9 122 10.3431 122 12V40.7513Z''',
  };

  @override
  State<MyRow> createState() => _MyRowState();
}

class _MyRowState extends State<MyRow> {
  List<String> get svgPaths => MyRow.rawPaths.keys.toList();

  @override
  void didUpdateWidget(covariant MyRow oldWidget) {
    super.didUpdateWidget(oldWidget);

    // اگر یکی از props تغییر کرده باشه، setState بزن
    if (oldWidget.selectedSvgPath != widget.selectedSvgPath ||
        oldWidget.removedPiece != widget.removedPiece ||
        oldWidget.image != widget.image) {
      setState(() {});
    }
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: List.generate(svgPaths.length, (index) {
            final path = svgPaths[index];
            final isSelected = widget.selectedSvgPath == path;
            // نمایش قطعه جداشده‌ی پازل اگر انتخاب شده
            if (isSelected &&
                widget.removedPiece != null &&
                widget.image != null) {
              return Padding(
                padding: const EdgeInsets.all(7),
                child: Center(
                  child: Container(
                    width: 80,
                    height: 80,
                    decoration: BoxDecoration(
                      border: Border.all(color: Colors.greenAccent),
                      borderRadius: BorderRadius.circular(8),
                    ),
                    child: CustomPaint(
                      painter: PuzzlePieceClipPathPainter(
                        image: widget.image!,
                        rect: widget.removedPiece!,
                        rawSvgPath: MyRow.rawPaths[path]!,
                      ),
                    ),
                  ),
                ),
              );
            }

            // اگر انتخاب نشده، پازل معمولی نمایش داده شود
            return Padding(
              padding: const EdgeInsets.all(7),
              child: GestureDetector(
                onTap: () {
                  widget.onTap(path, index);
                },
                child: SizedBox(
                  width: 80,
                  height: 80,
                  child: Stack(
                    alignment: Alignment.center,
                    children: [MyPuzzle(assetName: path)],
                  ),
                ),
              ),
            );
          }),
        ),
      ],
    );
  }
}
